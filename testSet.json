{
	"name" : "Example Set",
	"data" :
	[
		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Welches ist keine Traversierungsart?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "suborder" ], 
				"wrong" : [ "preorder", "postorder", "inorder" ]
			}
		},

		{
			"categories" : [ "TechGI" ],
			"questions"  : [ "Wofür steht FPGA?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Field Programmable Gate Array" ], 
				"wrong" : [ "Final Port Gate Array", "Fixed Portable Great Awesome", "Frequently Programmed Game Application" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "Welche dieser Listenfunktionale wendet eine übergebene Funktion auf jedes Element der Liste an?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "map" ], 
				"wrong" : [ "reduce", "filter", "Es gibt kein Listenfunktional, das so etwas kann" ]
			}
		},

		{
			"categories" : [ "Monaden" ],
			"questions"  : [ "Mit welchem Operator können z.B IO-Befehle verkettet werden?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "&" ],
				"wrong" : [ "++", "::", "&&" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "Wofür ist reduce zuständig" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Listenelemente zusammenfassen" ], 
				"wrong" : [ "Datentyp der Listenelemente ändern", "Liste komprimmieren", "Programmcode verkürzen" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "TYPE book == book(author : person,<br/>title : denotation ,<br/>year : nat<br/>Welcher Datentyp liegt hier vor?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Produkttyp" ], 
				"wrong" : [ "Summentyp", "Aufzählungstyp", "Rekursiver Datentyp" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "TYPE book == book(author : person,<br/>title : denotation ,<br/>year : nat<br/>Welcher der Folgenden Teile gehört nicht zur induzierten Signatur" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "FUN book person ** denotation -> book" ], 
				"wrong" : [ "SORT book", "FUN book: person ** denotation ** nat -> book", "FUN book?: book -> bool" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Um was für eine Traversierungsart handelt es sich bei preOrder" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "root - left - right" ], 
				"wrong" : [ "left - right - root", "left - root - right", "right root left" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Um was für eine Traversierungsart handelt es sich bei inOrder" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "left - root - right" ], 
				"wrong" : [ "left - right - root", "root - left - right", "right root left" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Um was für eine Traversierungsart handelt es sich bei postOrder" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "left - right - root" ], 
				"wrong" : [ "left - root - right", "root - left - right", "right root left" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Was für einen Vorteil hat eine inOrder Traversierung auf einem sortiertem Binärbaum?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Die generierte Liste ist Sortiert" ], 
				"wrong" : [ "Schnelle Laufzeit", "Die generierte Liste ist minimal groß", "Alle Wurzeln stehen hintereinander" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Was geschieht, wenn man bei einem Baum mit mehr als einem Knoten eine Kante entfernt?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Es entsteht ein Wald" ], 
				"wrong" : [ "nicht geschieht", "Der Wert des zugehörigen Blattes geht für immer verloren", "Kanten können nicht entfernt werden" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "Welches der Folgenden ist kein Listenfunktional" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "split" ], 
				"wrong" : [ "map", "filter", "reduce" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale "],
			"questions"  : [ "Was macht filter?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Selektiert alle Elemente, die ein bestimmtes Prädikat erfüllen und entfernt sie aus der Liste" ], 
				"wrong" : [ "Löscht doppelte Elemente", "filtert alle Elemente, die kleiner als ein eingegebenes sind aus der Liste", "sortiert die Liste" ]
			}
		},

		{
			"categories" : [ "MPGI1" ],
			"questions"  : [ "Wie heißt der Erfinder der Programmiersprache OPAL?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Dr.Pepper" ], 
				"wrong" : [ "Professor Pepsi", "Vitali Cola", "Prof. Dr. Opalos III" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Was ist ein Binärbaum?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Baum mit höchstens 2 Nachfolgern" ], 
				"wrong" : [ "Baum mit mindestens 2 Nachfolgern", "Baum mit binärem Knoteninhalt", "Baum mit 2 Knoten" ]
			}
		},

		{
			"categories" : [ "Aufwandsberechnung" ],
			"questions"  : [ "Was ist größer O(n²) oder O(n log(n))?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "O(n²)" ], 
				"wrong" : [ "(n log(n))", "gleich groß", "keine Ahnung" ]
			}
		},

		{
			"categories" : [ "Aufwandsberechnung" ],
			"questions"  : [ "FUN g: nat -> nat<br/>DEF g(n) == f(n-1) +5<br/> Welcher der Folgenden ist der passende Aufwandsterm?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "A(f(n-1)) + A(+)" ], 
				"wrong" : [ "A(fg(n+1)) + A(*)", "A(f(n)) + A(+)", "A(f(n-1)) + A(g(n))" ]
			}
		},

		{
			"categories" : [ "Aufwandsberechnung" ],
			"questions"  : [ "Wie viele Rekurrenzrelationen gibt es?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "5" ], 
				"wrong" : [ "7", "3", "4" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "Was ist eine verschränkte Rekursion?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "2 Funktionen die sich gegenseitig aufrufen" ], 
				"wrong" : [ "Eine Funktion die nur sich selbst aufruft", "Eine schnell wachsende Tail-Recursion", "Eine Baumartige Rekursion mit Aufwand O(n)" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "Was passiert bei einer baumartigen Rekursion?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Rekursionsaufrufe wachsen zu Baumartiger struktur an" ], 
				"wrong" : [ "Der Rekursionsanker wird nie erreicht", "Die Parameter werden nicht inkrementiert", "Es entsteht ein Rot-Schwarz Baum" ]
			}
		},

		{
			"categories" : [ "Konstrukte" ],
			"questions"  : [ "IF x < 5 THEN 1<br/>IF x > 5 THEN 2<br/>IF x = 5 THEN 3<br/>Wie heißt diese Struktur?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Dijkstra-IF" ], 
				"wrong" : [ "Synthetic-If", "Pepper-IF", "Elseless-IF" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "f(x) = f(x-1)<br/>Um welche Rekursionsart handelt es sich?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Repetitive Rekursion/Tail-Recursion" ], 
				"wrong" : [ "Lineare Rekursion", "Geschachtelte Rekursion", "Verschränkte Rekursion" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "f(x) = 1 + f(x-1)<br/>Um welche Rekursionsart handelt es sich?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Lineare Rekursion" ], 
				"wrong" : [ "Repetitive Rekursion/Tail-Recursion", "Geschachtelte Rekursion", "Verschränkte Rekursion" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "f(x) = f(x-1) + f(x-2)<br/>Um welche Rekursionsart handelt es sich?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Baumartige Rekursion" ], 
				"wrong" : [ "Repetitive Rekursion/Tail-Recursion", "Geschachtelte Rekursion", "Verschränkte Rekursion" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "f(x) = f(f(x*2))<br/>Um welche Rekursionsart handelt es sich?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Geschachtelte Rekursion" ], 
				"wrong" : [ "Repetitive Rekursion/Tail-Recursion", "Lineare Rekursion", "Verschränkte Rekursion" ]
			}
		},

		{
			"categories" : [ "Rekursion" ],
			"questions"  : [ "f(x) = g(x-1)<br/>g(x) = f(x-1)<br/>Um welche Rekursionsart handelt es sich?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Verschränkte Rekursion" ], 
				"wrong" : [ "Repetitive Rekursion/Tail-Recursion", "Lineare Rekursion", "Baumartige Rekursion" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "Welche der folgenden Signaturen passt zu einem Diskriminator" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "FUN cat?: animal -> bool" ], 
				"wrong" : [ "FUN name: animal -> string", "FUN cat: string ** nat -> cat", "FUN catConv: cat -> dog" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "TYPE animal = cat(name: string, age: nat)<br/>Welche der folgenden induzierten Signaturen passt zu einem Selektor für den Namen einer Katze?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "FUN name: animal -> string" ], 
				"wrong" : [ "FUN cat?: cat -> bool", "FUN cat: string ** nat -> cat", "FUN catConv: cat -> dog" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "Welche der folgenden Signaturen passt zu einem Konstruktor" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "FUN cat: string ** nat -> cat" ], 
				"wrong" : [ "FUN cat?: animal -> bool", "FUN name: animal -> string", "FUN catConv: cat -> dog" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "TYPE animal = cat(name: string,age:nat)<br/>\tdog(name: string)<br/>Welcher Datentyp liegt hier vor" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Summentyp" ], 
				"wrong" : [ "Produkttyp", "Aufzählungstyp", "Rekursiver Datentyp" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "DATA animal = cat dog karakal elefant<br/>Welcher Datentyp liegt hier vor" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Aufzählungstyp" ], 
				"wrong" : [ "Produkttyp", "Summentyp", "Rekursiver Datentyp" ]
			}
		},

		{
			"categories" : [ "Datentypen" ],
			"questions"  : [ "TYPE tree = node(key:alpha, left: tree, right: tree<br/>\tnil<br/>Welcher Datentyp liegt hier vor" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Rekursiver Datentyp" ], 
				"wrong" : [ "Produkttyp", "Summentyp", "Aufzählungstyp" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "FUN xxx: (in -> bool) ->  seq[in] -> seq[in]<br/> Die Signatur welches Listenfunktionals liegt hier vor?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "filter" ], 
				"wrong" : [ "map", "reduce", "zip" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "FUN xxx: (a ** b -> c) ** b  ->  seq[a] ** seq[b] -> seq[c]<br/> Die Signatur welches Listenfunktionals liegt hier vor?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "zip" ], 
				"wrong" : [ "map", "reduce", "filter" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "FUN xxx: (a ** b -> b) ** b -> seq[a] -> b<br/> Die Signatur welches Listenfunktionals liegt hier vor?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "reduce" ], 
				"wrong" : [ "map", "filter", "zip" ]
			}
		},

		{
			"categories" : [ "Listenfunktionale" ],
			"questions"  : [ "FUN xxx: (a -> b) ->  seq[a] -> seq[b]<br/> Die Signatur welches Listenfunktionals liegt hier vor?" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "map" ], 
				"wrong" : [ "filter", "reduce", "zip" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Was bezeichnet man mit der Größe eines Baumes" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Anzahl der Knoten" ], 
				"wrong" : [ "Länge des längsten Pfades", "Anzahl der Kanten", "Größter Wert" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Was bezeichnet man mit der Höhe eines Baumes" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Länge des längsten Pfades" ], 
				"wrong" : [ "Anzahl der Knoten", "Anzahl der Kanten", "Größter Wert" ]
			}
		},

		{
			"categories" : [ "Bäume" ],
			"questions"  : [ "Was bezeichnet man mit der Pfadlänge eines Baumes" ],
			"statistic" :
			{
				"right"   : 0,
				"wrong"   : 0,
				"skipped" : 0,
				"rating"  : 0
			},
			"answers" :
			{
				"right" : [ "Anzahl der Kanten" ], 
				"wrong" : [ "Länge des längsten Pfades", "Anzahl der Knoten", "Größter Wert" ]
			}
		}
	]
}